package p1280;

import java.io.*;
import java.util.*;

public class p1280 {
	public static void main(String args[]) {
		Scanner scan = new Scanner(System.in);
		int n = scan.nextInt();
		int m = scan.nextInt();
		int v = scan.nextInt();
		
		ArrayList<Integer>[] arrayList = (ArrayList<Integer>[]) new ArrayList[n + 1]; // 1부터 그래프가 시작하므로 1 추가
		for(int i = 0; i <= n; i++) {
			arrayList[i] = new ArrayList<>();
		}
		
		for(int i = 0; i < m; i++) {
			int start = scan.nextInt();
			int end = scan.nextInt();
			arrayList[start].add(end);
			arrayList[end].add(start);
		}

		for(int i = 1; i <= n; i++) {
			Collections.sort(arrayList[i]);
		}
		
		
	}
	
	public static void DFS(ArrayList<Integer>[] temp, boolean[] boolTemp, int vertex) {
		if(boolTemp[vertex]) { // 이미 탐색 완료된 노드면 종료
			return;
		}
		
		boolTemp[vertex] = true;
		System.out.print(vertex + " ");
		
		for(int nextCnt = 0; nextCnt < temp[vertex].size(); nextCnt++) {
			if(!boolTemp[temp.]) {
				
			}
		}
	}
}
