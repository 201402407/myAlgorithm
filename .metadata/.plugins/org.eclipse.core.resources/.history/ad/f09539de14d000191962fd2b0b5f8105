package dfsnfs;

import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class p2178_2 {
	static int[][] map;
	static boolean[][] visited;
	
	public static void main(String args[]) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int m = sc.nextInt();
		if(n < 2 || m > 100) {
			System.out.println("n, m의 범위를 넘어선 값을 입력했습니다.");
			System.exit(0);	
		}
		
		map = new int[n][m];
		visited = new boolean[n][m];
		Arrays.fill(visited, false);
		sc.nextLine();	// 엔터 입력 방지
		
		// 맵 입력받기
		for(int i = 0; i < n; i++) {	// n = y
			String strLine = sc.nextLine();
			if(strLine.length() != m) {
				System.out.println("m의 크기만큼 값을 입력하지 않았습니다.");
				System.exit(0);	
			}
			for(int j = 0; j < strLine.length(); j++) {	// m = x
				char maze = strLine.charAt(j);
				if(maze == 48 || maze == 49) {	// 0 또는 1
					map[i][j] = Character.getNumericValue(strLine.charAt(j));	// 아스키코드가 아닌 char 숫자를 int로 변경
				}
				else {
					System.out.println("0 또는 1을 입력하지 않았습니다. 종료합니다.");
					System.exit(0);
				}
			}
		}
		
		explore(0, 0);
	}

	private static void explore(int y, int x) {
		Queue<Integer> queueY = new LinkedList<>();
		Queue<Integer> queueX = new LinkedList<>();
		queueY.add(y);
		queueX.add(x);
		
		
	}
}
